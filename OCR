{"cells":[{"cell_type":"markdown","metadata":{"id":"B-OGl6F2RVqY"},"source":["Load package"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2OXxrU_GRT03"},"outputs":[],"source":["import tensorflow as tf\n","from tensorflow.keras.datasets import mnist\n","from tensorflow.keras.applications import ResNet50, resnet50\n","from tensorflow.keras.utils import to_categorical\n","from tensorflow.keras.models import Model, Sequential\n","from tensorflow.keras.layers import Dense, Flatten, Conv2D, GlobalAveragePooling2D, Rescaling, RandomRotation, RandomZoom, RandomFlip, MaxPooling2D\n","import matplotlib.pyplot as plt\n","from skimage.transform import resize\n","import numpy as np\n","import cv2 as cv"]},{"cell_type":"markdown","metadata":{"id":"JyJmyyIKUpw1"},"source":["Load data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"11YHbOnGUQFv"},"outputs":[],"source":["(x_train, y_train), (x_test, y_test) = mnist.load_data()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_wM3rt4hUsQt"},"outputs":[],"source":["def align_the_image(images, labels):\n","  plt.figure(figsize=(10, 10))\n","  for i in range(25):\n","    plt.subplot(5, 5, i+1)\n","    plt.imshow(images[i], cmap='gray')\n","    plt.title(f'Label: {labels[i]}')\n","    plt.axis('off')\n","\n","  plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6xL_FG82EQ3i"},"outputs":[],"source":["y = np.concatenate((y_train, y_test))\n","num_classes = len(set(y))\n","num_classes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_uLPIFO5_-Qg"},"outputs":[],"source":["y_train_final = to_categorical(y_train, num_classes=num_classes)\n","y_test_final = to_categorical(y_test, num_classes=num_classes)\n","y_train_final.shape, '\\n', y_train_final"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PCjmzHoTcZmb"},"outputs":[],"source":["x_train.shape, x_test.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A7FUvHMrePyC"},"outputs":[],"source":["align_the_image(x_train, y_train)"]},{"cell_type":"markdown","metadata":{"id":"boNUrzJndB13"},"source":["preprocessing"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X71xmLq2c3VS"},"outputs":[],"source":["# gradient magnitude threshold\n","def edge_detection(images):\n","  for i in range(len(images)):\n","    grad_x = cv.Sobel(images[i], cv.CV_64F, 1, 0, ksize=3)\n","    grad_y = cv.Sobel(images[i], cv.CV_64F, 0, 1, ksize=3)\n","\n","    magnitude = np.sqrt(grad_x ** 2 + grad_y ** 2)\n","\n","    threshold = 600\n","\n","    images[i] = np.uint8(magnitude \u003e threshold) * 255\n","\n","  return images\n","\n","# resize image\n","def resize_image(images):\n","  resizing = np.array([resize(image, (32, 32)) for image in images])\n","  resizing = np.expand_dims(resizing, axis=-1).astype('float32') / 255.0\n","\n","  return resizing"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"93kcJtnna3eA"},"outputs":[],"source":["# x_train = resize_image(x_train)\n","# x_test = resize_image(x_test)\n","x_train_preprocessing = edge_detection(x_train)\n","x_test_preprocessing = edge_detection(x_test)\n","x_train_preprocessing.shape, x_test_preprocessing.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"T5xvsThqeDns"},"outputs":[],"source":["x_train_final = resize_image(x_train_preprocessing)\n","align_the_image(x_train_final, y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7f3eQWd5e9M7"},"outputs":[],"source":["x_test_final = resize_image(x_test_preprocessing)\n","align_the_image(x_test_final, y_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uL_lsLgn9BAa"},"outputs":[],"source":["x_train_final.shape, x_test_final.shape"]},{"cell_type":"markdown","metadata":{"id":"RSEgjzW01z3o"},"source":["CNN architecture Resnet"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6qYRXyxYHZQs"},"outputs":[],"source":["resnet = ResNet50(weights='imagenet', include_top=False, input_shape=(32, 32, 3))\n","# for layer in resnet.layers:\n","#     layer.trainable = False"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tzhFUdO1HXPt"},"outputs":[],"source":["augmented_secton = Sequential(\n","    [\n","        RandomFlip('horizontal', input_shape=(32, 32, 1)),\n","        RandomRotation(0.1),\n","        RandomZoom(0.1)\n","    ]\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-xyUgM6TI-cU"},"outputs":[],"source":["model = Sequential()\n","# model.add(augmented_secton)\n","model.add(Conv2D(3, (3, 3), padding='same', activation='relu', input_shape=(32, 32, 1)))\n","model.add(resnet)\n","model.add(GlobalAveragePooling2D())\n","model.add(Flatten())\n","model.add(Dense(256, activation='relu'))\n","model.add(Dense(num_classes, activation='softmax'))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uqbSXYEGMMFb"},"outputs":[],"source":["def extract_features(arr_img):\n","  img_data = np.expand_dims(arr_img, axis=0)\n","  img_data = resnet50.preprocess_input(img_data)\n","  my_features = model.predict(img_data)\n","  return my_features"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":391},"executionInfo":{"elapsed":5226111,"status":"error","timestamp":1715344040569,"user":{"displayName":"Akhmad Faizal","userId":"00633155797562995736"},"user_tz":-420},"id":"j6VZ_A1uOckW","outputId":"938b0386-602a-48e6-d784-398c2047452a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/20\n","1688/1688 [==============================] - 4555s 3s/step - loss: 0.5551 - accuracy: 0.8444 - val_loss: 5.4303 - val_accuracy: 0.2023\n","Epoch 2/20\n","1340/1688 [======================\u003e.......] - ETA: 15:24 - loss: 0.3125 - accuracy: 0.9136"]},{"ename":"KeyboardInterrupt","evalue":"","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-36-ce234ab7beaa\u003e\u001b[0m in \u001b[0;36m\u003ccell line: 2\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moptimizer\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'adam'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mloss\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlosses\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSparseCategoricalCrossentropy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfrom_logits\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetrics\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdevice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/GPU:0'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 3\u001b[0;31m   \u001b[0mhistory\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train_final\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_split\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     63\u001b[0m         \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     64\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 65\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     66\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     67\u001b[0m             \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1805\u001b[0m                         ):\n\u001b[1;32m   1806\u001b[0m                             \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1807\u001b[0;31m                             \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1808\u001b[0m                             \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1809\u001b[0m                                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    830\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    831\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 832\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    833\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    834\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    866\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    867\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 868\u001b[0;31m       return tracing_compilation.call_function(\n\u001b[0m\u001b[1;32m    869\u001b[0m           \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_no_variable_creation_config\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    870\u001b[0m       )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/tracing_compilation.py\u001b[0m in \u001b[0;36mcall_function\u001b[0;34m(args, kwargs, tracing_options)\u001b[0m\n\u001b[1;32m    137\u001b[0m   \u001b[0mbound_args\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunction_type\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    138\u001b[0m   \u001b[0mflat_inputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunction_type\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munpack_inputs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbound_args\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 139\u001b[0;31m   return function._call_flat(  # pylint: disable=protected-access\n\u001b[0m\u001b[1;32m    140\u001b[0m       \u001b[0mflat_inputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfunction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    141\u001b[0m   )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/concrete_function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, tensor_inputs, captured_inputs)\u001b[0m\n\u001b[1;32m   1321\u001b[0m         and executing_eagerly):\n\u001b[1;32m   1322\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1323\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_inference_function\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcall_preflattened\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1324\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1325\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/atomic_function.py\u001b[0m in \u001b[0;36mcall_preflattened\u001b[0;34m(self, args)\u001b[0m\n\u001b[1;32m    214\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0mcall_preflattened\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mSequence\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTensor\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u003e\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;34m\"\"\"Calls with flattened tensor inputs and returns the structured output.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 216\u001b[0;31m     \u001b[0mflat_outputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcall_flat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    217\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunction_type\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpack_output\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflat_outputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    218\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/polymorphic_function/atomic_function.py\u001b[0m in \u001b[0;36mcall_flat\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m    249\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mrecord\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstop_recording\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    250\u001b[0m           \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_bound_context\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecuting_eagerly\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 251\u001b[0;31m             outputs = self._bound_context.call_function(\n\u001b[0m\u001b[1;32m    252\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    253\u001b[0m                 \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/context.py\u001b[0m in \u001b[0;36mcall_function\u001b[0;34m(self, name, tensor_inputs, num_outputs)\u001b[0m\n\u001b[1;32m   1484\u001b[0m     \u001b[0mcancellation_context\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcancellation\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1485\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcancellation_context\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1486\u001b[0;31m       outputs = execute.execute(\n\u001b[0m\u001b[1;32m   1487\u001b[0m           \u001b[0mname\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1488\u001b[0m           \u001b[0mnum_outputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnum_outputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     51\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 53\u001b[0;31m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0m\u001b[1;32m     54\u001b[0m                                         inputs, attrs, num_outputs)\n\u001b[1;32m     55\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["model.compile(optimizer='adam', loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=['accuracy'])\n","with tf.device('/GPU:0'):\n","  history = model.fit(x_train_final, y_train, batch_size=32, epochs=20, validation_split=0.1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3MQmmJMT_nzm"},"outputs":[],"source":["def showAllValueOfHistory(history, epochs_range):\n","    epochs_range = range(epochs_range)\n","    accuracy = history.history['accuracy']\n","    val_accuracy = history.history['val_accuracy']\n","    loss = history.history['loss']\n","    val_loss = history.history['val_loss']\n","\n","    plt.figure(figsize=(8, 8))\n","    plt.subplot(1, 2, 1)\n","    plt.plot(epochs_range, accuracy, label='Training Accuracy')\n","    plt.plot(epochs_range, val_accuracy, label='Validation Accuracy')\n","    plt.legend(loc='lower right')\n","    plt.title('Training \u0026 Validation Accuracy')\n","\n","    plt.subplot(1, 2, 2)\n","    plt.plot(epochs_range, loss, label='Training Loss')\n","    plt.plot(epochs_range, val_loss, label='Validation Loss')\n","    plt.legend(loc='upper right')\n","    plt.title('Training \u0026 Validation Loss')\n","    return plt.show()\n","\n","showAllValueOfHistory(history, 20)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dp4LVJa6BDuw"},"outputs":[],"source":["model.save('drive/MyDrive/project-ugm/RESNET.h5')"]},{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":11,"status":"ok","timestamp":1723629948731,"user":{"displayName":"Akhmad Faizal","userId":"00633155797562995736"},"user_tz":-420},"id":"QpPmC4ljWUOS"},"outputs":[],"source":["base_dir = 'drive/MyDrive/project-ugm/'"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22653,"status":"ok","timestamp":1723629971375,"user":{"displayName":"Akhmad Faizal","userId":"00633155797562995736"},"user_tz":-420},"id":"81MzvGF0WYe3","outputId":"482b5fff-296e-49df-c05a-7259484a8658"},"outputs":[{"name":"stdout","output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":399,"status":"ok","timestamp":1723629996132,"user":{"displayName":"Akhmad Faizal","userId":"00633155797562995736"},"user_tz":-420},"id":"pJXCrXBMWZcU"},"outputs":[],"source":["import json, os\n","import pandas as pd"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":210},"executionInfo":{"elapsed":420,"status":"error","timestamp":1723630030125,"user":{"displayName":"Akhmad Faizal","userId":"00633155797562995736"},"user_tz":-420},"id":"Ure73_ISWcc_"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'Aspek': 'Biaya', 'OO (Object Oriented)': 'Pendekatan OO dapat\\\\nmempengaruhi biaya proyek\\\\nkarena fokus pada\\\\npembangunan perangkat lunak\\\\nyang terstruktur dan dapat\\\\ndimodifikasi dengan lebih baik.', 'Agile': 'Pendekatan Agile cenderung\\\\nmenggunakan pendekatan yang lebih\\\\nfleksibel terhadap biaya dengan fokus\\\\npada pengeluaran yang dibutuhkan\\\\npada setiap iterasi/proses.'}, {'Aspek': 'Waktu', 'OO (Object Oriented)': 'Strukturasi yang baik dari\\\\npendekatan OO, seperti\\\\npenggunaan metodologi\\\\npengembangan seperti Scrum\\\\natau Agile, dapat\\\\nmemungkinkan pengiriman\\\\niteratif yang dapat mengurangi\\\\nwaktu pengembangan', 'Agile': 'Agile membagi proyek menjadi iterasi\\\\natau sprint pendek yang biasanya\\\\nberlangsung dari beberapa minggu\\\\nhingga beberapa bulan. Ini\\\\nmemungkinkan penyelesaian bertahap\\\\ndari fitur-fitur dan perubahan yang\\\\ndiminta oleh pemangku kepentingan\\\\n(stakeholder).'}, {'Aspek': 'Tahapan', 'OO (Object Oriented)': 'a. Analisis kebutuhan\\\\nb. Perencanaan\\\\nc. Implementasi dan Pengujian', 'Agile': 'a. Perencanaan\\\\nb. Pengembangan\\\\nc. Pengujian'}, {'Aspek': 'Tools/Framework', 'OO (Object Oriented)': 'a. Pemodelan Objek: UML\\\\nb. Framework OO: Spring\\\\nuntuk Java, Django untuk\\\\nPython', 'Agile': 'Scrum, Kanban'}, {'Aspek': 'Perangkat Lunak\\\\nPendukung', 'OO (Object Oriented)': 'IntelliJ IDEA, Eclipse, atau\\\\nVisual Studio', 'Agile': 'JIRA, Trello'}, {'Aspek': 'Alokasi SDM', 'OO (Object Oriented)': 'Pelatihan, Penugasan Tim,\\\\nPemantauan dan Pengelolaan\\\\nKinerja', 'Agile': 'Tim Multifungsional, Peran yang\\\\nFleksibel'}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'Product Name': 'Evermos Recommendation System', 'Product Owner': 'Reka Alamsyah', 'Date': '5 Januari 2024'}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_3\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'ID': '001', 'User Story': 'Sebagai pengguna, saya\\\\ningin rekomendasi produk\\\\nyang dipersonalisasi\\\\nberdasarkan riwayat\\\\npenelusuran saya', 'Priority': 'Tinggi', 'Story Point': '8', 'Notes': ''}, {'ID': '002', 'User Story': 'Sebagai pengguna, saya\\\\ningin rekomendasi\\\\nberdasarkan riwayat\\\\npembelian saya', 'Priority': 'Tinggi', 'Story Point': '13', 'Notes': ''}, {'ID': '003', 'User Story': 'Sebagai pengguna, saya\\\\ningin melihat produk-produk\\\\nyang sedang tren', 'Priority': 'Sedang', 'Story Point': '5', 'Notes': ''}, {'ID': '004', 'User Story': 'Sebagai pengguna, saya\\\\ningin rekomendasi\\\\nberdasarkan daftar keinginan\\\\nsaya', 'Priority': 'Tinggi', 'Story Point': '10', 'Notes': ''}, {'ID': '005', 'User Story': 'Sebagai pengguna, saya\\\\ningin menerima rekomendasi\\\\nmelalui email', 'Priority': 'Sedang', 'Story Point': '5', 'Notes': ''}, {'ID': '006', 'User Story': 'Sebagai pengguna, saya\\\\ningin menyaring\\\\nrekomendasi berdasarkan\\\\nkategori', 'Priority': 'Tinggi', 'Story Point': '8', 'Notes': ''}, {'ID': '007', 'User Story': 'Sebagai pengguna, saya\\\\ningin memberikan feedback\\\\ntentang produk yang\\\\ndirekomendasikan', 'Priority': 'Sedang', 'Story Point': '8', 'Notes': ''}, {'ID': '008', 'User Story': 'Sebagai pengguna, saya\\\\ningin menyembunyikan\\\\nrekomendasi tertentu', 'Priority': 'Rendah', 'Story Point': '3', 'Notes': ''}, {'ID': '009', 'User Story': 'Sebagai pengguna, saya\\\\ningin menjelajahi produk\\\\nyang direkomendasikan di\\\\nbagian khusus', 'Priority': 'Tinggi', 'Story Point': '13', 'Notes': ''}, {'ID': '010', 'User Story': 'Sebagai pengguna, saya\\\\ningin rekomendasi tersedia di\\\\naplikasi seluler', 'Priority': 'Tinggi', 'Story Point': '13', 'Notes': ''}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'Sprint Code': 'SPRINT1', 'Start Date': '06 Januari 2024', 'End Date': '20 Januari 2024', 'Scrum Master': 'Alamsyah', 'Anggota Tim': '1. Renaldy\\\\n2. Kapiran\\\\n3. Yakitori\\\\n4. Setiawan'}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_5\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'ID': '1', 'User Story': 'Sebagai pengguna, saya\\\\ningin rekomendasi\\\\nproduk yang', 'Prioritas': 'Tinggi', 'Assigned To': '[Anggota Tim\\\\nA]', 'Story\\\\nPoint': '8', 'Status': 'Sedang\\\\nBerlangsung'}, {'ID': '', 'User Story': 'dipersonalisasi\\\\nberdasarkan riwayat\\\\npenelusuran saya', 'Prioritas': '', 'Assigned To': '', 'Story\\\\nPoint': '', 'Status': ''}, {'ID': '2', 'User Story': 'Sebagai pengguna, saya\\\\ningin rekomendasi\\\\nberdasarkan riwayat\\\\npembelian saya', 'Prioritas': 'Tinggi', 'Assigned To': '[Anggota Tim\\\\nB]', 'Story\\\\nPoint': '13', 'Status': 'Selesai'}, {'ID': '3', 'User Story': 'Sebagai pengguna, saya\\\\ningin melihat\\\\nproduk-produk yang\\\\nsedang tren', 'Prioritas': 'Sedang', 'Assigned To': '[Anggota Tim\\\\nC]', 'Story\\\\nPoint': '5', 'Status': 'Selesai'}, {'ID': '4', 'User Story': 'Sebagai pengguna, saya\\\\ningin rekomendasi\\\\nberdasarkan daftar\\\\nkeinginan saya', 'Prioritas': 'Tinggi', 'Assigned To': '[Anggota Tim\\\\nA]', 'Story\\\\nPoint': '10', 'Status': 'Selesai'}, {'ID': '5', 'User Story': 'Sebagai pengguna, saya\\\\ningin menerima\\\\nrekomendasi melalui\\\\nemail', 'Prioritas': 'Sedang', 'Assigned To': '[Anggota Tim\\\\nB]', 'Story\\\\nPoint': '5', 'Status': 'Selesai'}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_6\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'Sprint Code': 'SPRINT2', 'Start Date': '21 Januari 2024', 'End Date': '3 Februari 2024', 'Scrum Master': 'Alamsyah', 'Anggota Tim': '1. Renaldy\\\\n2. Kapiran\\\\n3. Yakitori\\\\n4. Setiawan'}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_7\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'ID': '', 'User Story': 'Sebagai pengguna, saya\\\\ningin menyaring\\\\nrekomendasi', 'Prioritas': 'Tinggi', 'Assigned To': '[Anggota Tim\\\\nA]', 'Story\\\\nPoint': '8', 'Status': 'Sedang\\\\nBerlangsung'}, {'ID': '', 'User Story': 'berdasarkan kategori', 'Prioritas': '', 'Assigned To': '', 'Story\\\\nPoint': '', 'Status': ''}, {'ID': '', 'User Story': 'Sebagai pengguna, saya\\\\ningin memberikan\\\\nfeedback tentang produk\\\\nyang direkomendasikan', 'Prioritas': 'Sedang', 'Assigned To': '[Anggota Tim\\\\nB]', 'Story\\\\nPoint': '8', 'Status': 'Selesai'}, {'ID': '', 'User Story': 'Sebagai pengguna, saya\\\\ningin menyembunyikan\\\\nrekomendasi tertentu', 'Prioritas': 'Rendah', 'Assigned To': '[Anggota Tim\\\\nC]', 'Story\\\\nPoint': '3', 'Status': 'Selesai'}, {'ID': '', 'User Story': 'Sebagai pengguna, saya\\\\ningin menjelajahi produk\\\\nyang direkomendasikan\\\\ndi bagian khusus', 'Prioritas': 'Tinggi', 'Assigned To': '[Anggota Tim\\\\nA]', 'Story\\\\nPoint': '13', 'Status': 'Selesai'}, {'ID': '', 'User Story': 'Sebagai pengguna, saya\\\\ningin rekomendasi\\\\ntersedia di aplikasi\\\\nseluler', 'Prioritas': 'Tinggi', 'Assigned To': '[Anggota Tim\\\\nB]', 'Story\\\\nPoint': '13', 'Status': 'Selesai'}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_8\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'Nama Produk': 'CaterEaseHub', 'Logo': '', 'Deskripsi': '\\\"CaterEase Hub\\\" merupakan platform digital yang\\\\nmemudahkan konsumen dalam mencari dan memesan\\\\nlayanan catering untuk berbagai acara melalui aplikasi\\\\nmobile atau website. Pengguna dapat dengan mudah\\\\nmenjelajahi berbagai menu dari berbagai penyedia layanan\\\\nkatering yang terdaftar di platform ini. Setelah menemukan\\\\nmenu yang sesuai, mereka dapat melakukan pemesanan\\\\ndengan menyesuaikan detail pesanan, seperti jumlah'}, {'Nama Produk': '', 'Logo': '', 'Deskripsi': 'tamu, waktu acara, dan preferensi khusus lainnya.\\\\nPlatform ini mengkoordinasikan pesanan pengguna\\\\ndengan penyedia layanan katering terkait, memastikan\\\\npengiriman makanan sesuai jadwal dan standar kualitas\\\\nyang tinggi. Setelah layanan selesai, pembayaran dapat\\\\ndilakukan secara aman dan efisien melalui platform.\\\\nDengan memanfaatkan teknologi, \\\"CaterEase Hub\\\"\\\\nmenciptakan pengalaman yang nyaman dan modern bagi\\\\npengguna dalam memesan layanan katering untuk acara\\\\nmereka.'}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_9\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'Domain Feature': 'Dashboard Penyedia\\\\nLayanan Katering', 'Feature': 'Pengelolaan Menu', 'Spesifikasi Singkat': 'Memungkinkan penyedia layanan katering\\\\nuntuk mengelola dan memperbarui menu\\\\nmereka, termasuk harga, deskripsi, dan foto\\\\nmakanan.'}, {'Domain Feature': '', 'Feature': 'Pemesanan dan\\\\nManajemen Pesanan', 'Spesifikasi Singkat': 'Fitur untuk melihat, mengelola, dan\\\\nmengkonfirmasi pesanan yang diterima dari\\\\nkonsumen.'}, {'Domain Feature': 'Fitur Pencarian dan\\\\nPenyaringan', 'Feature': 'Pencarian Menus', 'Spesifikasi Singkat': 'Memungkinkan konsumen mencari menu\\\\nberdasarkan jenis acara, jenis makanan,\\\\nharga, atau preferensi khusus lainnya.'}, {'Domain Feature': '', 'Feature': 'Filter dan Sortir', 'Spesifikasi Singkat': 'Fitur untuk menyaring hasil pencarian\\\\nberdasarkan kategori, ulasan, atau\\\\npopularitas menu.'}, {'Domain Feature': 'Pemesanan dan\\\\nPembayaran', 'Feature': 'Proses Pemesanan', 'Spesifikasi Singkat': 'Memungkinkan konsumen untuk melakukan\\\\npemesanan dengan mudah dengan\\\\nmenyesuaikan detail pesanan dan jumlah\\\\ntamu.'}, {'Domain Feature': '', 'Feature': 'Opsi Pembayaran', 'Spesifikasi Singkat': 'Integrasi dengan berbagai metode\\\\npembayaran yang aman seperti kartu kredit,\\\\ntransfer bank, atau dompet digital.'}, {'Domain Feature': 'Manajemen Profil dan\\\\nKontak', 'Feature': 'Profil Bisnis', 'Spesifikasi Singkat': 'Penyedia layanan katering dapat mengelola\\\\nprofil bisnis mereka, termasuk informasi'}, {'Domain Feature': '', 'Feature': '', 'Spesifikasi Singkat': 'kontak, lokasi, dan jam operasional.'}, {'Domain Feature': '', 'Feature': 'Komunikasi dengan\\\\nPelanggan', 'Spesifikasi Singkat': 'Fitur pesan atau notifikasi untuk\\\\nberkomunikasi dengan konsumen terkait\\\\ndengan pesanan, konfirmasi, atau\\\\npertanyaan lainnya.'}, {'Domain Feature': 'Laporan dan Analisis', 'Feature': 'Laporan Pesanan', 'Spesifikasi Singkat': 'Fitur untuk melacak dan menghasilkan\\\\nlaporan terkait pesanan yang diterima,\\\\njumlah penjualan, dan ulasan dari\\\\nkonsumen.'}, {'Domain Feature': '', 'Feature': 'Analisis Kinerja', 'Spesifikasi Singkat': 'Menyediakan data analitik tentang performa\\\\nmenu, popularitas, atau tren pemesanan\\\\nuntuk membantu penyedia layanan katering\\\\ndalam pengambilan keputusan.'}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"answer_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"pdf/table\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_10\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'Deskripsi Layanan': 'Jelaskan dengan jelas layanan yang akan disediakan\\\\noleh perusahaan startup digital kepada perusahaan\\\\ncatering. Ini termasuk penggunaan platform, jenis\\\\nlayanan yang ditawarkan, termasuk fitur-fitur yang\\\\nakan diakses oleh perusahaan catering.', 'Hak dan Kewajiban Kedua Belah\\\\nPihak': 'Tentukan hak dan kewajiban masing-masing pihak\\\\nsecara spesifik. Misalnya, hak perusahaan startup\\\\ndigital untuk menggunakan konten yang disediakan\\\\noleh perusahaan catering di platform mereka, serta\\\\nkewajiban perusahaan catering untuk menyediakan\\\\nkonten yang akurat dan terkini.', 'Pembayaran dan Biaya': 'Tetapkan rincian terkait dengan pembayaran, biaya\\\\nlayanan, dan metode pembayaran yang akan\\\\ndigunakan. Jelaskan jika ada biaya tambahan yang\\\\nmungkin timbul dan bagaimana cara penanganannya.', 'Kualitas Layanan': 'Tentukan standar kualitas yang diharapkan dari\\\\nlayanan yang diberikan oleh perusahaan catering.\\\\nMisalnya, ketentuan mengenai kualitas makanan,\\\\nwaktu pengiriman, dan layanan pelanggan yang\\\\ndiberikan kepada pengguna akhir.'}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"json_11\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"[{'Kerahasiaan dan Perlindungan\\\\nData': 'Tetapkan klausul kerahasiaan untuk melindungi data\\\\npenting dari kedua belah pihak. Termasuk bagaimana\\\\ndata pengguna akan dikelola, disimpan, dan\\\\ndigunakan.', 'Periode Kontrak dan\\\\nPembatalan': 'Tentukan jangka waktu kontrak, apakah itu bersifat\\\\nbulanan, tahunan, atau dengan periode tertentu\\\\nlainnya. Sertakan juga syarat-syarat pembatalan\\\\nkontrak dan prosedur yang harus diikuti apabila salah\\\\nsatu pihak ingin mengakhiri kerjasama.', 'Pemenuhan dan Penyelesaian\\\\nPerselisihan': 'Sediakan ketentuan terkait dengan pemenuhan\\\\nkewajiban, termasuk prosedur jika terjadi perselisihan\\\\nantara kedua belah pihak, serta bagaimana\\\\npenyelesaiannya akan dilakukan.', 'Peningkatan Layanan dan\\\\nPerubahan Kontrak': 'Tentukan apakah ada ketentuan perihal perubahan\\\\nlayanan atau peningkatan fitur dalam kontrak.\\\\nJelaskan bagaimana kedua belah pihak dapat\\\\nmengusulkan perubahan dan bagaimana perubahan\\\\ntersebut akan diimplementasikan.', 'Pengakhiran Kontrak dan\\\\nTransisi Layanan': 'Tetapkan prosedur dan ketentuan terkait dengan\\\\npengakhiran kontrak, termasuk bagaimana transisi\\\\nlayanan akan dilakukan setelah kontrak berakhir.', 'Hukum yang Berlaku dan\\\\nYurisdiksi': 'Tentukan hukum yang akan mengatur kontrak ini dan\\\\nnegara bagian mana yang akan menjadi yurisdiksi\\\\njika terjadi sengketa.'}]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"jumlah_tabel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 11,\n        \"max\": 11,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"df"},"text/html":["\n","  \u003cdiv id=\"df-219447b5-0ee7-4f91-8a61-b69ecdd9a8cb\" class=\"colab-df-container\"\u003e\n","    \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eUnnamed: 0\u003c/th\u003e\n","      \u003cth\u003ejson_1\u003c/th\u003e\n","      \u003cth\u003ejson_2\u003c/th\u003e\n","      \u003cth\u003ejson_3\u003c/th\u003e\n","      \u003cth\u003ejson_4\u003c/th\u003e\n","      \u003cth\u003ejson_5\u003c/th\u003e\n","      \u003cth\u003ejson_6\u003c/th\u003e\n","      \u003cth\u003ejson_7\u003c/th\u003e\n","      \u003cth\u003ejson_8\u003c/th\u003e\n","      \u003cth\u003ejson_9\u003c/th\u003e\n","      \u003cth\u003eanswer_type\u003c/th\u003e\n","      \u003cth\u003ejson_10\u003c/th\u003e\n","      \u003cth\u003ejson_11\u003c/th\u003e\n","      \u003cth\u003ejumlah_tabel\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003e[{'Aspek': 'Biaya', 'OO (Object Oriented)': 'P...\u003c/td\u003e\n","      \u003ctd\u003e[{'Product Name': 'Evermos Recommendation Syst...\u003c/td\u003e\n","      \u003ctd\u003e[{'ID': '001', 'User Story': 'Sebagai pengguna...\u003c/td\u003e\n","      \u003ctd\u003e[{'Sprint Code': 'SPRINT1', 'Start Date': '06 ...\u003c/td\u003e\n","      \u003ctd\u003e[{'ID': '1', 'User Story': 'Sebagai pengguna, ...\u003c/td\u003e\n","      \u003ctd\u003e[{'Sprint Code': 'SPRINT2', 'Start Date': '21 ...\u003c/td\u003e\n","      \u003ctd\u003e[{'ID': '', 'User Story': 'Sebagai pengguna, s...\u003c/td\u003e\n","      \u003ctd\u003e[{'Nama Produk': 'CaterEaseHub', 'Logo': '', '...\u003c/td\u003e\n","      \u003ctd\u003e[{'Domain Feature': 'Dashboard Penyedia\\nLayan...\u003c/td\u003e\n","      \u003ctd\u003epdf/table\u003c/td\u003e\n","      \u003ctd\u003e[{'Deskripsi Layanan': 'Jelaskan dengan jelas ...\u003c/td\u003e\n","      \u003ctd\u003e[{'Kerahasiaan dan Perlindungan\\nData': 'Tetap...\u003c/td\u003e\n","      \u003ctd\u003e11\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","    \u003cdiv class=\"colab-df-buttons\"\u003e\n","\n","  \u003cdiv class=\"colab-df-container\"\u003e\n","    \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-219447b5-0ee7-4f91-8a61-b69ecdd9a8cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\"\u003e\n","    \u003cpath d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","\n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","    \u003cscript\u003e\n","      const buttonEl =\n","        document.querySelector('#df-219447b5-0ee7-4f91-8a61-b69ecdd9a8cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-219447b5-0ee7-4f91-8a61-b69ecdd9a8cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","\n","  \u003cdiv id=\"id_7a15ef16-6735-43ee-be02-62af4077815f\"\u003e\n","    \u003cstyle\u003e\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    \u003c/style\u003e\n","    \u003cbutton class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","    \u003cscript\u003e\n","      (() =\u003e {\n","      const buttonEl =\n","        document.querySelector('#id_7a15ef16-6735-43ee-be02-62af4077815f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () =\u003e {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n"],"text/plain":["   Unnamed: 0                                             json_1  \\\n","0           0  [{'Aspek': 'Biaya', 'OO (Object Oriented)': 'P...   \n","\n","                                              json_2  \\\n","0  [{'Product Name': 'Evermos Recommendation Syst...   \n","\n","                                              json_3  \\\n","0  [{'ID': '001', 'User Story': 'Sebagai pengguna...   \n","\n","                                              json_4  \\\n","0  [{'Sprint Code': 'SPRINT1', 'Start Date': '06 ...   \n","\n","                                              json_5  \\\n","0  [{'ID': '1', 'User Story': 'Sebagai pengguna, ...   \n","\n","                                              json_6  \\\n","0  [{'Sprint Code': 'SPRINT2', 'Start Date': '21 ...   \n","\n","                                              json_7  \\\n","0  [{'ID': '', 'User Story': 'Sebagai pengguna, s...   \n","\n","                                              json_8  \\\n","0  [{'Nama Produk': 'CaterEaseHub', 'Logo': '', '...   \n","\n","                                              json_9 answer_type  \\\n","0  [{'Domain Feature': 'Dashboard Penyedia\\nLayan...   pdf/table   \n","\n","                                             json_10  \\\n","0  [{'Deskripsi Layanan': 'Jelaskan dengan jelas ...   \n","\n","                                             json_11  jumlah_tabel  \n","0  [{'Kerahasiaan dan Perlindungan\\nData': 'Tetap...            11  "]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["import pandas as pd\n","import json\n","\n","df = pd.read_csv(os.path.join(base_dir, 'test.csv'), =)\n","\n","df\n"]}],"metadata":{"colab":{"authorship_tag":"ABX9TyNhD4icPl0Npwwo0kcgwPjK","mount_file_id":"1gtIMNiswCe3UWpnwhSFNox_AJc1ULM_E","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}